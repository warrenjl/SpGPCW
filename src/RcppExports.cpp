// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// SpGPCW
Rcpp::List SpGPCW(int mcmc_samples, arma::vec y, arma::mat x, arma::mat z, arma::vec site_id, arma::mat neighbors, double metrop_var_rho_trans, double metrop_var_phi_trans, Rcpp::Nullable<double> sigma2_beta_prior, Rcpp::Nullable<double> alpha_sigma2_theta_prior, Rcpp::Nullable<double> beta_sigma2_theta_prior, Rcpp::Nullable<double> a_rho_prior, Rcpp::Nullable<double> b_rho_prior, Rcpp::Nullable<double> alpha_sigma2_eta_prior, Rcpp::Nullable<double> beta_sigma2_eta_prior, Rcpp::Nullable<double> a_phi_prior, Rcpp::Nullable<double> b_phi_prior, Rcpp::Nullable<Rcpp::NumericVector> beta_init, Rcpp::Nullable<Rcpp::NumericMatrix> theta_init, Rcpp::Nullable<double> sigma2_theta_init, Rcpp::Nullable<double> rho_init, Rcpp::Nullable<Rcpp::NumericVector> eta_init, Rcpp::Nullable<double> sigma2_eta_init, Rcpp::Nullable<double> phi_init, Rcpp::Nullable<int> rho_zero_indicator);
RcppExport SEXP _SpGPCW_SpGPCW(SEXP mcmc_samplesSEXP, SEXP ySEXP, SEXP xSEXP, SEXP zSEXP, SEXP site_idSEXP, SEXP neighborsSEXP, SEXP metrop_var_rho_transSEXP, SEXP metrop_var_phi_transSEXP, SEXP sigma2_beta_priorSEXP, SEXP alpha_sigma2_theta_priorSEXP, SEXP beta_sigma2_theta_priorSEXP, SEXP a_rho_priorSEXP, SEXP b_rho_priorSEXP, SEXP alpha_sigma2_eta_priorSEXP, SEXP beta_sigma2_eta_priorSEXP, SEXP a_phi_priorSEXP, SEXP b_phi_priorSEXP, SEXP beta_initSEXP, SEXP theta_initSEXP, SEXP sigma2_theta_initSEXP, SEXP rho_initSEXP, SEXP eta_initSEXP, SEXP sigma2_eta_initSEXP, SEXP phi_initSEXP, SEXP rho_zero_indicatorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type mcmc_samples(mcmc_samplesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type site_id(site_idSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type neighbors(neighborsSEXP);
    Rcpp::traits::input_parameter< double >::type metrop_var_rho_trans(metrop_var_rho_transSEXP);
    Rcpp::traits::input_parameter< double >::type metrop_var_phi_trans(metrop_var_phi_transSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type sigma2_beta_prior(sigma2_beta_priorSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type alpha_sigma2_theta_prior(alpha_sigma2_theta_priorSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type beta_sigma2_theta_prior(beta_sigma2_theta_priorSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type a_rho_prior(a_rho_priorSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type b_rho_prior(b_rho_priorSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type alpha_sigma2_eta_prior(alpha_sigma2_eta_priorSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type beta_sigma2_eta_prior(beta_sigma2_eta_priorSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type a_phi_prior(a_phi_priorSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type b_phi_prior(b_phi_priorSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericVector> >::type beta_init(beta_initSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericMatrix> >::type theta_init(theta_initSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type sigma2_theta_init(sigma2_theta_initSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type rho_init(rho_initSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericVector> >::type eta_init(eta_initSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type sigma2_eta_init(sigma2_eta_initSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<double> >::type phi_init(phi_initSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<int> >::type rho_zero_indicator(rho_zero_indicatorSEXP);
    rcpp_result_gen = Rcpp::wrap(SpGPCW(mcmc_samples, y, x, z, site_id, neighbors, metrop_var_rho_trans, metrop_var_phi_trans, sigma2_beta_prior, alpha_sigma2_theta_prior, beta_sigma2_theta_prior, a_rho_prior, b_rho_prior, alpha_sigma2_eta_prior, beta_sigma2_eta_prior, a_phi_prior, b_phi_prior, beta_init, theta_init, sigma2_theta_init, rho_init, eta_init, sigma2_eta_init, phi_init, rho_zero_indicator));
    return rcpp_result_gen;
END_RCPP
}
// beta_update
arma::vec beta_update(arma::mat x, arma::mat z, arma::vec site_id, arma::vec w, arma::vec gamma, arma::mat theta_old, double sigma2_beta);
RcppExport SEXP _SpGPCW_beta_update(SEXP xSEXP, SEXP zSEXP, SEXP site_idSEXP, SEXP wSEXP, SEXP gammaSEXP, SEXP theta_oldSEXP, SEXP sigma2_betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type site_id(site_idSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta_old(theta_oldSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_beta(sigma2_betaSEXP);
    rcpp_result_gen = Rcpp::wrap(beta_update(x, z, site_id, w, gamma, theta_old, sigma2_beta));
    return rcpp_result_gen;
END_RCPP
}
// eta_update
arma::vec eta_update(arma::mat MCAR, arma::mat z_star, arma::mat theta, double sigma2_theta, double rho, double sigma2_eta_old, double phi_old, arma::mat corr_inv);
RcppExport SEXP _SpGPCW_eta_update(SEXP MCARSEXP, SEXP z_starSEXP, SEXP thetaSEXP, SEXP sigma2_thetaSEXP, SEXP rhoSEXP, SEXP sigma2_eta_oldSEXP, SEXP phi_oldSEXP, SEXP corr_invSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type MCAR(MCARSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z_star(z_starSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_theta(sigma2_thetaSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_eta_old(sigma2_eta_oldSEXP);
    Rcpp::traits::input_parameter< double >::type phi_old(phi_oldSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type corr_inv(corr_invSEXP);
    rcpp_result_gen = Rcpp::wrap(eta_update(MCAR, z_star, theta, sigma2_theta, rho, sigma2_eta_old, phi_old, corr_inv));
    return rcpp_result_gen;
END_RCPP
}
// neg_two_loglike_update
double neg_two_loglike_update(arma::vec y, arma::mat x, arma::mat z, arma::vec site_id, arma::vec beta, arma::mat theta);
RcppExport SEXP _SpGPCW_neg_two_loglike_update(SEXP ySEXP, SEXP xSEXP, SEXP zSEXP, SEXP site_idSEXP, SEXP betaSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type site_id(site_idSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(neg_two_loglike_update(y, x, z, site_id, beta, theta));
    return rcpp_result_gen;
END_RCPP
}
// phi_update
Rcpp::List phi_update(double phi_old, arma::mat MCAR, arma::mat theta, double sigma2_theta, double rho, arma::vec eta, double sigma2_eta, Rcpp::List temporal_corr_info, double a_phi, double b_phi, double metrop_var_phi_trans, int acctot_phi_trans);
RcppExport SEXP _SpGPCW_phi_update(SEXP phi_oldSEXP, SEXP MCARSEXP, SEXP thetaSEXP, SEXP sigma2_thetaSEXP, SEXP rhoSEXP, SEXP etaSEXP, SEXP sigma2_etaSEXP, SEXP temporal_corr_infoSEXP, SEXP a_phiSEXP, SEXP b_phiSEXP, SEXP metrop_var_phi_transSEXP, SEXP acctot_phi_transSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type phi_old(phi_oldSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type MCAR(MCARSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_theta(sigma2_thetaSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_eta(sigma2_etaSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type temporal_corr_info(temporal_corr_infoSEXP);
    Rcpp::traits::input_parameter< double >::type a_phi(a_phiSEXP);
    Rcpp::traits::input_parameter< double >::type b_phi(b_phiSEXP);
    Rcpp::traits::input_parameter< double >::type metrop_var_phi_trans(metrop_var_phi_transSEXP);
    Rcpp::traits::input_parameter< int >::type acctot_phi_trans(acctot_phi_transSEXP);
    rcpp_result_gen = Rcpp::wrap(phi_update(phi_old, MCAR, theta, sigma2_theta, rho, eta, sigma2_eta, temporal_corr_info, a_phi, b_phi, metrop_var_phi_trans, acctot_phi_trans));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_pgdraw
arma::vec rcpp_pgdraw(double b, arma::vec c);
RcppExport SEXP _SpGPCW_rcpp_pgdraw(SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_pgdraw(b, c));
    return rcpp_result_gen;
END_RCPP
}
// rho_update
Rcpp::List rho_update(double rho_old, arma::mat MCAR, arma::mat theta, double sigma2_theta, arma::vec eta_old, arma::mat corr_inv, double a_rho, double b_rho, double metrop_var_rho_trans, int acctot_rho_trans);
RcppExport SEXP _SpGPCW_rho_update(SEXP rho_oldSEXP, SEXP MCARSEXP, SEXP thetaSEXP, SEXP sigma2_thetaSEXP, SEXP eta_oldSEXP, SEXP corr_invSEXP, SEXP a_rhoSEXP, SEXP b_rhoSEXP, SEXP metrop_var_rho_transSEXP, SEXP acctot_rho_transSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type rho_old(rho_oldSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type MCAR(MCARSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_theta(sigma2_thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type eta_old(eta_oldSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type corr_inv(corr_invSEXP);
    Rcpp::traits::input_parameter< double >::type a_rho(a_rhoSEXP);
    Rcpp::traits::input_parameter< double >::type b_rho(b_rhoSEXP);
    Rcpp::traits::input_parameter< double >::type metrop_var_rho_trans(metrop_var_rho_transSEXP);
    Rcpp::traits::input_parameter< int >::type acctot_rho_trans(acctot_rho_transSEXP);
    rcpp_result_gen = Rcpp::wrap(rho_update(rho_old, MCAR, theta, sigma2_theta, eta_old, corr_inv, a_rho, b_rho, metrop_var_rho_trans, acctot_rho_trans));
    return rcpp_result_gen;
END_RCPP
}
// sigma2_eta_update
double sigma2_eta_update(arma::vec eta, arma::mat corr_inv, double alpha_sigma2_eta, double beta_sigma2_eta);
RcppExport SEXP _SpGPCW_sigma2_eta_update(SEXP etaSEXP, SEXP corr_invSEXP, SEXP alpha_sigma2_etaSEXP, SEXP beta_sigma2_etaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type corr_inv(corr_invSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_sigma2_eta(alpha_sigma2_etaSEXP);
    Rcpp::traits::input_parameter< double >::type beta_sigma2_eta(beta_sigma2_etaSEXP);
    rcpp_result_gen = Rcpp::wrap(sigma2_eta_update(eta, corr_inv, alpha_sigma2_eta, beta_sigma2_eta));
    return rcpp_result_gen;
END_RCPP
}
// sigma2_theta_update
double sigma2_theta_update(arma::mat MCAR, arma::mat theta, double rho_old, arma::vec eta_old, arma::mat corr_inv, double alpha_sigma2_theta, double beta_sigma2_theta);
RcppExport SEXP _SpGPCW_sigma2_theta_update(SEXP MCARSEXP, SEXP thetaSEXP, SEXP rho_oldSEXP, SEXP eta_oldSEXP, SEXP corr_invSEXP, SEXP alpha_sigma2_thetaSEXP, SEXP beta_sigma2_thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type MCAR(MCARSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type rho_old(rho_oldSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type eta_old(eta_oldSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type corr_inv(corr_invSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_sigma2_theta(alpha_sigma2_thetaSEXP);
    Rcpp::traits::input_parameter< double >::type beta_sigma2_theta(beta_sigma2_thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(sigma2_theta_update(MCAR, theta, rho_old, eta_old, corr_inv, alpha_sigma2_theta, beta_sigma2_theta));
    return rcpp_result_gen;
END_RCPP
}
// temporal_corr_fun
Rcpp::List temporal_corr_fun(int m, double phi);
RcppExport SEXP _SpGPCW_temporal_corr_fun(SEXP mSEXP, SEXP phiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    rcpp_result_gen = Rcpp::wrap(temporal_corr_fun(m, phi));
    return rcpp_result_gen;
END_RCPP
}
// theta_update
arma::mat theta_update(arma::mat theta_old, arma::mat x, arma::mat z, arma::vec site_id, arma::mat neighbors, arma::vec w, arma::vec gamma, arma::vec beta, double sigma2_theta_old, double rho_old, arma::vec eta_old, arma::mat corr_inv);
RcppExport SEXP _SpGPCW_theta_update(SEXP theta_oldSEXP, SEXP xSEXP, SEXP zSEXP, SEXP site_idSEXP, SEXP neighborsSEXP, SEXP wSEXP, SEXP gammaSEXP, SEXP betaSEXP, SEXP sigma2_theta_oldSEXP, SEXP rho_oldSEXP, SEXP eta_oldSEXP, SEXP corr_invSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type theta_old(theta_oldSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type site_id(site_idSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type neighbors(neighborsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_theta_old(sigma2_theta_oldSEXP);
    Rcpp::traits::input_parameter< double >::type rho_old(rho_oldSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type eta_old(eta_oldSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type corr_inv(corr_invSEXP);
    rcpp_result_gen = Rcpp::wrap(theta_update(theta_old, x, z, site_id, neighbors, w, gamma, beta, sigma2_theta_old, rho_old, eta_old, corr_inv));
    return rcpp_result_gen;
END_RCPP
}
// w_update
Rcpp::List w_update(arma::vec y, arma::mat x, arma::mat z, arma::vec site_id, arma::vec beta_old, arma::mat theta_old);
RcppExport SEXP _SpGPCW_w_update(SEXP ySEXP, SEXP xSEXP, SEXP zSEXP, SEXP site_idSEXP, SEXP beta_oldSEXP, SEXP theta_oldSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type site_id(site_idSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_old(beta_oldSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta_old(theta_oldSEXP);
    rcpp_result_gen = Rcpp::wrap(w_update(y, x, z, site_id, beta_old, theta_old));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SpGPCW_SpGPCW", (DL_FUNC) &_SpGPCW_SpGPCW, 25},
    {"_SpGPCW_beta_update", (DL_FUNC) &_SpGPCW_beta_update, 7},
    {"_SpGPCW_eta_update", (DL_FUNC) &_SpGPCW_eta_update, 8},
    {"_SpGPCW_neg_two_loglike_update", (DL_FUNC) &_SpGPCW_neg_two_loglike_update, 6},
    {"_SpGPCW_phi_update", (DL_FUNC) &_SpGPCW_phi_update, 12},
    {"_SpGPCW_rcpp_pgdraw", (DL_FUNC) &_SpGPCW_rcpp_pgdraw, 2},
    {"_SpGPCW_rho_update", (DL_FUNC) &_SpGPCW_rho_update, 10},
    {"_SpGPCW_sigma2_eta_update", (DL_FUNC) &_SpGPCW_sigma2_eta_update, 4},
    {"_SpGPCW_sigma2_theta_update", (DL_FUNC) &_SpGPCW_sigma2_theta_update, 7},
    {"_SpGPCW_temporal_corr_fun", (DL_FUNC) &_SpGPCW_temporal_corr_fun, 2},
    {"_SpGPCW_theta_update", (DL_FUNC) &_SpGPCW_theta_update, 12},
    {"_SpGPCW_w_update", (DL_FUNC) &_SpGPCW_w_update, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_SpGPCW(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
